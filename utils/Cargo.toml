[package]
name = "nimiq-utils"
version = "0.1.0"
authors = ["The Nimiq Core Development Team <info@nimiq.com>"]
edition = "2018"
description = "Various utilities (e.g., CRC, Merkle proofs, timers) for Nimiq's Rust implementation"
homepage = "https://nimiq.com"
repository = "https://github.com/nimiq/core-rs-albatross"
license = "Apache-2.0"
categories = ["cryptography::cryptocurrencies"]
keywords = ["nimiq", "cryptocurrency", "blockchain"]

[badges]
travis-ci = { repository = "nimiq/core-rs", branch = "master" }
is-it-maintained-issue-resolution = { repository = "nimiq/core-rs" }
is-it-maintained-open-issues = { repository = "nimiq/core-rs" }
maintenance = { status = "experimental" }

[dependencies]
bit-vec = { version = "0.6", optional = true }
clear_on_drop = { version = "0.2", optional = true }
failure = { version = "0.1", optional = true }
futures = { version = "0.3", optional = true }
log = { version = "0.4", optional = true }
parking_lot = { version = "0.10", optional = true }
rand = { version = "0.7", optional = true }
rand_core = { version = "0.5", optional = true }
tokio = { version = "0.2", optional = true, features = ["sync", "time"]}

beserial = { path = "../beserial", version = "0.1", optional = true }
beserial_derive = { path = "../beserial/beserial_derive", version = "0.1", optional = true }
nimiq-collections = { path = "../collections", version = "0.1", optional = true }
nimiq-hash = { path = "../hash", version = "0.1", optional = true }

[dev-dependencies]
beserial_derive = { path = "../beserial/beserial_derive", version = "0.1" }
tokio = { version = "0.2", features = ["macros", "rt-core", "sync", "time"]}

[features]
crc = []
futures-sync = ["futures"]
otp = ["beserial", "clear_on_drop", "nimiq-hash", "rand"]
key-store = ["failure", "beserial"]
iterators = []
locking = ["futures", "parking_lot"]
merkle = ["beserial", "beserial_derive", "nimiq-hash", "bit-vec", "math"]
mutable-once = []
observer = []
time = []
timers = ["futures", "parking_lot", "tokio", "log"]
unique-ptr = []
throttled-queue = ["nimiq-collections"]
rate-limit = []
unique-id = []
# Compiles this package with all features.
all = ["otp", "bit-vec", "crc", "key-store", "iterators", "locking", "merkle", "mutable-once", "observer", "time", "timers", "unique-ptr", "throttled-queue", "rate-limit", "unique-id", "math"]
# Compiles this package with the features needed for the nimiq client.
full-nimiq = ["crc", "iterators", "key-store", "locking", "merkle", "mutable-once", "observer", "time", "timers", "unique-ptr"]
math = []
key-rng = ["rand"]
hash-rng = ["rand_core", "nimiq-hash"]
